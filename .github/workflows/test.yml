name: Test Workflow

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

permissions:
  contents: read
  security-events: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Start Flask app (check only)
        run: |
          export FLASK_APP=app.py
          nohup flask run --host=127.0.0.1 --port=5000 > flask.log 2>&1 &
          sleep 5

      - name: Test Flask server is up
        run: curl http://localhost:5000

      - name: Upload Flask log (optional)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: flask-log
          path: flask.log
          

  test:
    runs-on: ubuntu-latest
    needs: build  

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Install Chrome + Chromedriver
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip jq
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo apt install -y ./google-chrome-stable_current_amd64.deb
          CHROMEDRIVER_VERSION=$(curl -s "https://googlechromelabs.github.io/chrome-for-testing/last-known-good-versions-with-downloads.json" | jq -r ".channels.Stable.version")
          wget -O chromedriver.zip "https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/${CHROMEDRIVER_VERSION}/linux64/chromedriver-linux64.zip"
          unzip chromedriver.zip
          sudo mv chromedriver-linux64/chromedriver /usr/local/bin/
          sudo chmod +x /usr/local/bin/chromedriver

      - name: Start Flask app for tests
        run: |
          export FLASK_APP=app.py
          nohup flask run --host=127.0.0.1 --port=5000 > flask.log 2>&1 &
          sleep 5

      - name: Run Selenium Tests
        env:
          CHROME_BIN: /usr/bin/google-chrome
        run: pytest web/test_selenium.py --disable-warnings

  eslint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: |
          npm ci || npm install

      - name: Run ESLint HTML report
        run: npx eslint . --ext .js -f html -o eslint-report.html
        working-directory: ./web

      - name: Upload ESLint HTML report as artifact
        uses: actions/upload-artifact@v4
        with:
          name: eslint-report
          path: ./web/eslint-report.html

      - name: Install SARIF formatter
        run: npm install --save-dev @microsoft/eslint-formatter-sarif
        working-directory: ./web

      - name: Run ESLint SARIF scan
        run: npx eslint . --ext .js -f @microsoft/eslint-formatter-sarif -o eslint-results.sarif
        working-directory: ./web

      - name: Upload ESLint SARIF report to GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ./web/eslint-results.sarif

  analyze:
    name: Analyze Code with CodeQL
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript' ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: "/language:${{ matrix.language }}"
   